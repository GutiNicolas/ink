scalar DateTime

type Query {
    papers: [Paper]
}

type Mutation {
    # Papers Related Mutations
    publishPaper(title: String!, creator: String!, body: String!, description: String!) : Paper!
    deletePaper(id: ID!) : Boolean
    updatePaper(id:ID!, title: String, body: String, description: String) : Paper!

    # Interactions Related Mutations
    likePaper(paperId: ID!, userId: ID!) : Boolean
    unLikePaper(paperId: ID!, userId: ID!) : Boolean
    commentPaper(paperId: ID!, userId: ID!, content: String!) : Comment
    deleteComment(commentId: ID!, userId: ID!) : Boolean
    replyComment(originalComment: ID!, userId: ID!, content: String!): Comment
}

type Paper {
    id: ID!
    title: String!
    creator: String!
    body: String!
    description: String!
    publishedDate: DateTime
    interactionId: ID
}

type Interaction {
    id: ID!
    likes: [ID!]
    comments: [ID!]
}

type Comment {
    id: ID!
    userId: ID
    content: String!
    publishedDate: DateTime
    deletionDate: DateTime
    replies: [ID!]
    likes: [ID!]
}

type Like {
    id: ID!
    likedDate: DateTime
    userId: ID!
}