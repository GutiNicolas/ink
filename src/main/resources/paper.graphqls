type Query {
    papers: [Paper!]
}

type Mutation {
    # Papers Related Mutations
    publishPaper(title: String!, creator: String!, body: String!, description: String!) : Paper!
    deletePaper(id: ID!) : Boolean
    updatePaper(id:ID!, title: String, body: String, description: String) : Paper!

    # Interactions Related Mutations
    likePaper(paperId: ID!, userId: String!) : Boolean
    unLikePaper(paperId: ID!, userId: String!) : Boolean
    commentPaper(paperId: ID!, userId: String!, content: String!) : Review!
    deleteComment(commentId: ID!, userId: String!) : Boolean
    replyComment(originalComment: ID!, userId: String!, content: String!): Review!
}

type Paper {
    id: ID!
    title: String!
    creator: String!
    body: String!
    description: String!
    publishedDate: String
    interaction: Interaction
}

type Interaction {
    id: ID!
    likes: [Like!]
    reviews: [Review!]
}

type Review {
    id: ID!
    userId: String
    content: String!
    publishedDate: String
    deletionDate: String
    replies: [Review!]
}

type Like {
    id: ID!
    likedDate: String
    userId: String!
}